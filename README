# This is application development ver 1.1 ----- by Giang LE
Acoustic Sensor using Raspberry Pi 3

This application offers a possibility to turn a Raspberry Pi as a sound device.
The application comes with 2 functions: a sound collector and a test tone generator.

List of content:
1. Configuration Instructions
2. Installation Instructions
3. Operating Instructions
4. List of Files
5. Copyright/ Copyleft
6. Contact Info.
7. Credits and Acknowledgements
    Server service


1. Configuration Instruction

This section contains 2 part: hardware configuration and software configuration

1.a. Hardware configuration

This program is designed for to ultilize a Rasperry Pi 3 with USB soundcard and microphone.
Ethernet connection is required for saving data to a remote server.
RPi onboard sound card doesn’t have microphone interface.
We have to change the default audio device to be USB sound card.

To do this, follow these instructions:

    Make sure the soundcard and micro phone is plugged in.
    Use “lsusb” command to check if your USB sound card is mounted.
    Use “sudo nano /etc/asound.conf” command and put following content to the file

				
		pcm.!default {
			type plug
			slave {
				pcm "hw:1,0"
			}
		}
		ctl.!default {
				type hw
				card 1
		}

Run “alsamixer” you should be able to see that USB sound card is the default audio device

1.b. Software configuration

This program require alsa-utils 1.0.25
If your system is using the 1.0.28 version, it is recommended to downgrade to the 1.0.25 version in order to avoid bugs.

To downgrade alsa-ultis, follow these instructions:

    Use “sudo nano /etc/apt/sources.list” command and add the last line
    Run “sudo apt-get update
    Run “sudo aptitude versions alsa-utils” to check if version 1.0.25 of alsa-util is available:
    Run “sudo apt-get install alsa-utils=1.0.25-4” to downgrade.
    Reboot (if necessary)

To make sure alsa-ultils installation was ready:

    Run “arecord -r44100 -c1 -f S16_LE -d5 test.wav” to test that your microphone is working.
		You should see a “test.wav” file in the current folder.
    Put earphone on. Run “aplay test.wav” to check that your recording is okay.

This program also requrie libcurl library To install libcurl, follow these instructions:

    First use command “ls /usr/include/curl” to identify that /usr/include/curl/ folder exists or not.
    If the folder doesn’t exist. Run “sudo apt-get update” to update the application list.
    Run “sudo apt-get install libcurl3” to install the libcurl3.
    Run “sudo apt-get install libcurl4-openssl-dev” to install the development API of libcurl4.

2.Installation instructions
The source code can be obtain from github by the command: git pull https://github.com/Midnightlight/Raspberry_AppDev 
Once the source code has been downloaded, open the file comm.h to edit the url to your own receiving php file: #define SERVER_URL your_url_here
Then use the command make to automatically compile the program: make
Run the program from the file wave.a as followed: ./wave.a your_device_name

3.Operating Instructions
The PHP program used to store the data from the Raspo and view them on browser can be found in the php folder in the git respitory.

4. List of Files
	README
	comm.c
	comm.h
	main.c
	makefile
	screen.c
	screen.h
	sound.c
	sound.h
	sound.php
	testcurl.c

5. Copyright/ Copyleft
6. Contact Info.
7. Credits and Acknowledgements


 following contents: /* pcm.!default { type plug slave { pcm "hw:1,0" } } ctl.!default { type hw card 1 } */ Run "alsamixer" to check if the USB sound card is the default audio device.

    operating instruction ....1. Plug in the power cable, Ethernet cable, USB sound card and a microphone. ....2. Run command "make" to build the pr project ------- comm.c comm.h ------- screen.c screen.h ------- wave.c wave.h ------- main.c ------- README.md ------- sound.php

    Copyright and licensing ----- This project was created by NGUYEN QUOC HUY (e1601140). ----- Contact info: +email: ng.q.huy1008@gmail.com

    Known bugs. There is no known bugs in this project until date: 20.04.2017 If you noticed a bug, please send me an email to this address: ng.q.huy98@gmail.com

    Troubleshooting 6.1) Font error. If you cannot display the bar chart on the screen, you should make sure to have Unicode encoding, since the bar is created by Unicode characters. To do that, Right Click on the bottom of the window>Change Setting>Translation

    Choose UTF-8. 6.2) The waveform is not changing. It is probably due to the microphone's misfunction. You should check the microphone to make sure it is functioning correctly by running a test program.

    Credits and acknowledgements ------- Author: NGUYEN QUOC HUY (e1601140) ------- Instructor: Mr.GAO CHAO (VAMK)

    Changelog ------Ver 1.0 : 20.03.2017 first release. The program is capable of display data in the screen. ------Ver 1.1 : 20.04.2017 Fixed some minor bugs.

    Download project. The project can be download or clone using the following github link: https://github.com/papaga3/AppDev2017.git

